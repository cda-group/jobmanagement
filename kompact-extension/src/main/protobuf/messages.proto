syntax = "proto3";

// Brought in from scalapb-runtime
import "scalapb/scalapb.proto";
import "google/protobuf/wrappers.proto";


option (scalapb.options) = {
  package_name: "runtime.kompact.messages"

  // All classes that extend a sealed trait need to be in the same Scala
  // file, so we set single_file to true.
  single_file: true
  flat_package: true
};


// Represents an InetSocketAddress
message InetProto {
    string ip = 1;
    int32 port = 2;
}

message Hello {
    string hey = 1;
}

// Kompact Messages

message KompactMsg {

}

// Akka Messages

message AkkaMsg {
    string path = 1;
}

message Ask {
    string askActor = 1;
    KompactAkkaMsg msg = 2[(scalapb.field).no_box = true];
}

message AskReply {
    string askActor = 1;
    KompactAkkaMsg msg = 2[(scalapb.field).no_box = true];
}

message ExecutorRegistration {
    string jobId = 1;
    KompactAkkaPath src = 2[(scalapb.field).no_box = true];
    KompactAkkaPath dst = 3[(scalapb.field).no_box = true];
}

message KompactAkkaPath {
    string path = 1;
    string ip = 2;
    int32 port = 3;
}

message KompactAkkaMsg {
    KompactAkkaPath src = 1[(scalapb.field).no_box = true];
    KompactAkkaPath dst = 2[(scalapb.field).no_box = true];
    oneof msg {
        ExecutorRegistration executorRegistration = 3;
        Hello hello = 4;
        Ask ask = 5;
        AskReply askReply = 6;
    }
}
